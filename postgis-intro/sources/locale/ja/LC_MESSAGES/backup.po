# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, Paul Ramsey | Mark Leslie
# This file is distributed under the same license as the Introduction to
# PostGIS package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
# Teramoto Ikuhiro <yellow@affrc.go.jp>, 2023.
# Regina Obe <regina@arrival3d.com>, 2023.
msgid ""
msgstr ""
"Project-Id-Version: Introduction to PostGIS 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-07 21:46-0500\n"
"PO-Revision-Date: 2023-03-24 09:18+0000\n"
"Last-Translator: Teramoto Ikuhiro <yellow@affrc.go.jp>\n"
"Language-Team: Japanese <https://weblate.osgeo.org/projects/postgis-workshop/"
"backup/ja/>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.15.2\n"
"Generated-By: Babel 2.9.1\n"

#: ../../en/backup.rst:4
msgid "PostgreSQL Backup and Restore"
msgstr "PostgreSQLのバックアップとレストア"

#: ../../en/backup.rst:6
msgid ""
"There are lots of ways to backup a PostgreSQL database, and the one you "
"choose will depend a great deal on how you are using the database."
msgstr "PostgreSQLデータベースのバックアップの方法が多数あり、どれを選ぶかはデータベ"
"ースをどう使うかに大きく依存しています。"

#: ../../en/backup.rst:8
msgid ""
"For relatively static databases, the basic pg_dump/pg_restore tools can be "
"used to take periodic snapshots of the data."
msgstr "比較的静的なデータベースでは、基本的に、"
"定期的なデータのスナップショットを取るのに pg_dump/pg_restore "
"ツールが使えます。"

#: ../../en/backup.rst:9
msgid ""
"For frequently changing data, using an \"online backup\" scheme allows "
"continuous archiving of updates to a secure location."
msgstr "データが頻繁に変更される場合には、「オンラインバックアップ」の枠組みを使いま"
"す。更新の継続的なアーカイブを安全な場所に保存できます。"

#: ../../en/backup.rst:11
msgid ""
"Online backup is the basis for replication and stand-by systems for `high "
"availability <http://www.postgresql.org/docs/current/static/high-"
"availability.html>`_, particularly for versions of PostgreSQL >= 9.0."
msgstr ""
"オンラインバックアップは、特に PostgreSQL 9.0 以上では `高可用性<http://www."
"postgresql.org/docs/current/static/high-availability.html>`_ "
"のレプリケーションと待機システムの基礎となります。"

#: ../../en/backup.rst:15
msgid "Laying Out your Data"
msgstr "データのレイアウト"

#: ../../en/backup.rst:17
msgid ""
"As discussed in :ref:`schemas`, ensuring that production data is always "
"stored in separate schemas is a very important **best practice** in managing "
"data. There are two reasons:"
msgstr ""
":ref:`schemas` で説明した通り、生成データが常に分割されたスキーマに格納されて"
"いるようにすることが、データ管理において非常に重要な **ベストプラクティス** "
"となります。次に二つの理由を示します:"

#: ../../en/backup.rst:19
msgid ""
"Backing up and restoring data in schemas is much simpler than managing lists "
"of tables to be backed up individually."
msgstr "個々にバックアップする場合ではテーブルの一覧の管理を行いますが、スキーマ内の"
"データのバックアップとレストアの方がずっと単純です。"

#: ../../en/backup.rst:20
msgid ""
"Keeping data tables out of the \"public\" schema allows far easier upgrades, "
"as discussed in :ref:`upgrades`."
msgstr ""
"データテーブルを \"public\" スキーマから除外することで、:ref:`upgrades` "
"で説明している通り、ずっと簡単なアップグレードが可能になります。"

#: ../../en/backup.rst:24
msgid "Basic Backup and Restore"
msgstr "基本的なバックアップとレストア"

#: ../../en/backup.rst:26
msgid ""
"Backing up a full database is easy using the pg_dump_ utility. The utility "
"is a command-line tool, which makes it easy to automate with scripting, and "
"it can also be invoke via a GUI in the PgAdmin utility."
msgstr ""
"データベースの全体のバックアップは pg_dump ユーティリティを使うと簡単です。こ"
"のユーティリティはコマンドラインツールなので、スクリプトで自動化がやりやすい"
"です。また、pgAdminユーティリティないのGUIを介して実行することもできます。"

#: ../../en/backup.rst:28
msgid ""
"To backup our ``nyc`` database, we can use the GUI, just right-click the "
"database you want to backup:"
msgstr "``nyc``データベースのバックアップにGUIを使います。バックアップを取りたいデー"
"タベースを右クリックします:"

#: ../../en/backup.rst:32
msgid "Enter the name of the backup file you want to create."
msgstr "生成したバックアップファイルのファイル名を入力します。"

#: ../../en/backup.rst:36
msgid ""
"Note that there are three backup format options: compress, tar and plain."
msgstr "バックアップフォーマットには、copress、tar、plainの三つの選択肢があります。"

#: ../../en/backup.rst:38
msgid ""
"**Plain** is just a textual SQL file. This is the simplest format and in "
"many ways the most flexible, since it can be editing or altered easily and "
"then loaded back into a database, allowing offline changes to things like "
"ownership or other global information."
msgstr ""
"**Plain** は、単なる文字のSQLファイルです。これは最も単純なフォーマットです。"
"また、簡単に編集、変更してデータベースに戻すことができ、所有者や他のグローバ"
"ル情報といったもののオフラインで変更できるので、最も柔軟です。"

#: ../../en/backup.rst:39
msgid ""
"**Tar** using a UNIX archive format to hold components of the dump in "
"separate files. Using the tar format allows the pg_restore_ utility to "
"selectively restore parts of the dump."
msgstr ""
"**Tar** は UNIX アーカイブのフォーマットを使って、別々のファイルにダンプのコ"
"ンポーネントを保持します。tar フォーマットでは、pg_restore_ "
"ユーティリティを使ってダンプの一部を選択して格納することができます。"

#: ../../en/backup.rst:40
msgid ""
"**Compress** is like the Tar format, but compresses the internal components "
"individually, allowing them to be selectively restored without decompressing "
"the entire archive."
msgstr ""
"**Compress** は tar フォーマットのようなものですが、内部のコンポーネントを個"
"別に圧縮しています。アーカイブ全体を復元せずに選択したものだけを格納すること"
"ができます。"

#: ../../en/backup.rst:42
msgid "We'll check the Compress option and go, saving out a backup file."
msgstr "バックアップファイルを保存する時には Compress "
"オプションにチェックを入れてから行います。"

#: ../../en/backup.rst:44
msgid "The same operation can be done with the command line like this:"
msgstr "コマンドラインでの同じ操作は次のようになります:"

#: ../../en/backup.rst:50
msgid ""
"Because the backup file is in Compress format, we can view the contents "
"using the pg_restore_ command to list the manifest. In the PgAdmin GUI, "
"\"View\" is an option in the panel."
msgstr ""
"バックアップファイルは Compress 書式なので、マニフェストの一覧を表示する "
"pg_restore_ コマンドを使ってコンテンツを見ることができます。pgAdmin GUI "
"では、パネルで \"View\" が任意選択できます。"

#: ../../en/backup.rst:54
msgid ""
"When you look at the manifest, one of the things you might notice is that "
"there are a lot of \"FUNCTION\" signatures in there."
msgstr "マニフェストを見るとき、多数の \"FUNCTION\" "
"があることに気づくかもしれません。"

#: ../../en/backup.rst:58
msgid ""
"That's because the pg_dump_ utility dumps **every** non-system object in the "
"database, and that includes the PostGIS function definitions."
msgstr ""
"pg_dump_ ユーティリティは、データベースの **簡単な** 非システムオブジェクトを"
"ダンプするので、PostGIS関数の定義を含むことになります。"

#: ../../en/backup.rst:62
msgid ""
"PostgreSQL 9.1+ includes an \"EXTENSION\" feature that allows add-on "
"packages like PostGIS to be installed as registered system components and "
"therefore excluded from pg_dump_ output. PostGIS 2.0 and higher support "
"installation using this extension system."
msgstr ""
"PostgreSQL 9.1以上では \"EXTENSION\" 機能があり、PostGISのようなパッケージを"
"システムコンポーネントに登録したうえで追加できるので、pg_dump_ "
"出力から除かれます。PostGIS 2."
"0以上では、エクステンションシステムを使ったインストールに対応しています。"

#: ../../en/backup.rst:64
msgid ""
"We can see the same manifest from the command-line using pg_restore_ "
"directly:"
msgstr "同じマニフェストをコマンドラインから pg_restore_ "
"を使って直接得ることができます:"

#: ../../en/backup.rst:70
msgid ""
"The problem with a dump file full of PostGIS function signatures is that we "
"really wanted a dump of our data, not our system functions."
msgstr "PostGIS関数のシグネチャが多数あるダンプファイルは、データだけが欲しくてシステ"
"ム関数は不要ですので、問題があります。"

#: ../../en/backup.rst:72
msgid ""
"Since every object is in the dump file, we can restore to a blank database "
"and get full functionality. In doing so, we are expecting that system we are "
"restoring to has exactly the same version of PostGIS as the one we dumped "
"from (since the function signature definitions reference a particular "
"version of the PostGIS shared library)."
msgstr ""
"あらゆるオブジェクトはダンプファイル内にあるため、データの無いデータベースの"
"レストアを行おうとしても、全ての機能が得られます。そうすることで、レストアし"
"ようとしているシステムが、"
"ダンプ元のものと確実に同じバージョンのPostGISを持っていることが期待されます ("
"関数シグネチャ定義は特定のバーうじょんのPostGISの共有ライブラリを参照している"
"ためです)。"

#: ../../en/backup.rst:74
msgid "From the command-line the restore looks like this:"
msgstr "コマンドラインからレストアは次のように見えます:"

#: ../../en/backup.rst:81
msgid ""
"Dumping just data, without function signatures, is where having data in "
"schemas is handy, because there is a command-line flag to only dump a "
"particular schema:"
msgstr ""
"関数シグネチャが無いデータだけのダンプは、スキーマ内のデータを保持するもので"
"、便利です。特定のスキーマだけをダンプするコマンドラインのフラグがあるからで"
"す。次のようにします:"

#: ../../en/backup.rst:87
msgid ""
"Now when we list the contents of the dump, we see just the data tables we "
"wanted::"
msgstr "ダンプのコンテント一覧を表示すると求めるデータテーブルだけを見ることができま"
"す:"

#: ../../en/backup.rst:116
msgid ""
"Having just the data tables is handy, because it means we can store to a "
"database with any version of PostGIS installed, as we talk about in :ref:"
"`upgrades`."
msgstr ""
"データテーブルだけを持つのは :ref:`upgrades` で言及しているように、"
"どのバージョンの PostGIS であってもデータベースに格納できるので、便利です。"

#: ../../en/backup.rst:120
msgid "Backing Up Users"
msgstr "ユーザーのバックアップ"

#: ../../en/backup.rst:122
msgid ""
"The pg_dump_ utility operates a database at a time (or a schema or table at "
"a time, if you restrict it). However, information about users is is stored "
"across an entire cluster, it's not stored in any one database!"
msgstr ""
"pg_dump_ ユーティリティは、データベースを一度に "
"(あるいは、制限した場合にはスキーマやテーブルを一度に) 操作します。しかし、ユ"
"ーザまわりの情報はクラスタ全体に格納され、どのデータベースにも保存されません!"

#: ../../en/backup.rst:124
msgid ""
"To backup your user information, use the pg_dumpall_ utility, with the \"--"
"globals-only\" flag."
msgstr "ユーザ情報をバックアップするには pg_dumpall_ ユーティリティを使用し \""
"--globals-only\" フラグを付けます。"

#: ../../en/backup.rst:130
msgid ""
"You can also use pg_dumpall_ in its default mode to backup an entire "
"cluster, but be aware that, as with pg_dump_, you will end up backing up the "
"PostGIS function signatures, so the dump will have to be restored against an "
"identical software installation, it can't be used as part of an upgrade "
"process."
msgstr ""
"pg_dumpall_ をクラスタ全体のバックアップに使うデフォルトモードも可能ですが、"
"pg_dump_ を使うのと同じに PostGIS 関数シグネチャをバックアップすることになる"
"るので、ダンプは同じソフトウェアインストール状況になっているところにレストア"
"する必要があり、また、アップグレード処理の一部としては使えないので、ご注意下"
"さい。"

#: ../../en/backup.rst:134
msgid "Online Backup and Restore"
msgstr "オンラインでのバックアップと格納"

#: ../../en/backup.rst:136
msgid ""
"Online backup and restore allows an administrator to keep an extremely up-to-"
"date set of backup files without the overhead of repeatedly dumping the "
"entire database. If the database is under frequent insert and update load, "
"then online backup might be preferable to basic backup."
msgstr ""
"オンラインでのバックアップとレストアによって、管理者が、データベース全体のダ"
"ンプを反復して行うことで発生するオーバヘッドもなく、バックアップファイルのセ"
"ットの最新版を非常によく保持できます。データベースが頻繁な追加と更新の負荷が"
"かかっている場合には、オンラインバックアップは基本的なバックアップより好まし"
"くなることもあります。"

#: ../../en/backup.rst:140
msgid ""
"The best way to learn about online backup is to read the relevant sections "
"of the PostgreSQL manual on `continuous archiving and point-in-time recovery "
"<http://www.postgresql.org/docs/current/static/continuous-archiving.html>`_. "
"This section of the PostGIS workshop will just provide a brief snapshot of "
"online backup set-up."
msgstr ""
"オンラインバックアップを習得する最善の方法は、PostgreSQLマニュアルの ` "
"継続的アーカイブとポイントインタイムリカバリ（PITR） <https://www.postgresql."
"jp/document/current/html/continuous-archiving.html>`_ "
"などのセクションを読むことです。PostGIS ワークショップでは、オンラインバック"
"アップの簡単なスナップショットを提供します。"

#: ../../en/backup.rst:144
msgid "How it Works"
msgstr "仕組み"

#: ../../en/backup.rst:146
msgid ""
"Rather than continually write to the main data tables, PostgreSQL stores "
"changes initially in \"write-ahead logs\" (WAL). Taken together, these logs "
"are a complete record of all changes made to a database.  Online backup "
"consists of taking a copy of the database main data table, then taking a "
"copy of each WAL that is generated from then on."
msgstr ""
"PostgreSQL "
"は変更されると、最初は、メインデータテーブルへの継続的な書き込みでなく"
"、\"write-ahead logs\" (WAL) に保存します。まとめると、これらのログはデータベ"
"ースで発生した全ての変更の完全な記録です。オンラインバックアップではデータベ"
"ースのメインテーブルの複写を取得し、その後に生成される個々のWALの複製を取得し"
"ます。"

#: ../../en/backup.rst:150
msgid ""
"When it is time to recover to a new database, the system starts on the main "
"data copy, then replays all the WAL files into the database. The end result "
"is a restored database in the same state as the original at the time of the "
"last WAL received."
msgstr ""
"新しいデータベースへの回復を行うべき時になると、システムはメインデータの複写"
"物から起動し、すべてのWALファイルをデータベースで実行します。最終的な結果は、"
"最後にWALを受信した時点でのオリジナルと同じ状態の復元されたデータベースです。"

#: ../../en/backup.rst:152
msgid ""
"Because WAL are being written anyways, and transferring copies to an archive "
"server is computationally cheap, online backup is an effective means of "
"keeping a very up-to-date backup of a system without resorting to intensive "
"regular full dumps."
msgstr ""
"WALはとにかく書き込まれていて、複写物のアーカイブサーバへの転送は計算コストが"
"低いので、オンラインバックアップは、計算集中となる定期的なフルダンプを行わず"
"に、システムのバックアップをごく最近のものとして維持する効果的な手段です。"

#: ../../en/backup.rst:156
msgid "Archiving the WAL Files"
msgstr "WALファイルのアーカイブ"

#: ../../en/backup.rst:158
msgid ""
"The first thing to do in setting up online backup is to create an archiving "
"method. PostgreSQL archiving methods are the ultimate in flexibility: the "
"PostgreSQL backend simply calls a script specified in the "
"``archive_command`` configuration parameter."
msgstr ""
"オンラインバックのセットアップで最初に行うべきことは、アーカイブ方法を作成す"
"ることです。PostgreSQLアーカイブ方法は、柔軟性が非常に高いです。PostgreSQL "
"バックエンドはコンフィギュレーションパラメータ ``archive_command`` "
"で指定されるスクリプトを呼ぶだけです。"

#: ../../en/backup.rst:160
msgid ""
"That means archiving can be as simple as copying the file to a network-"
"mounted drive, and as complex as encrypting and emailing the files to the "
"remote archive. Any process you can script you can use to archive the files."
msgstr ""
"これはつまり、ファイルをネットワークドライブに複製するので、アーカイブは単純"
"にすることができます。また、ファイルのリモートアーカイブへの暗号化とメール送"
"信と同じくらいの複雑性を持ちます。ユーザがスクリプトとして書くことができる処"
"理は全てファイルをアーカイブ化するのに使うことができます。"

#: ../../en/backup.rst:162
msgid ""
"To turn on archiving we will edit ``postgresql.conf``, first turning on WAL "
"archiving:"
msgstr "アーカイブを有効にする員は ``postgresql.conf`` を編集します。まず次のように "
"WAL アーカイブを有効にします:"

#: ../../en/backup.rst:169
msgid ""
"And then setting the ``archive_command`` to copy our archive files to a safe "
"location (changing the destination paths as appropriate):"
msgstr ""
"それから ``archive_command`` を設定して、アーカイブファイルを安全な位置 "
"(複写先パスは必要に応じて変更します) に複写します。次のようにします:"

#: ../../en/backup.rst:179
msgid ""
"It is important that the archive command not over-write existing files, so "
"the unix command includes an initial test to ensure that the files aren't "
"already there. It is also important that the command returns a non-zero "
"status if the copy process fails."
msgstr ""
"アーカイブコマンドが存在するファイルの上書きを行わないようにすることが重要で"
"すので、UNIX "
"コマンドは、ファイルが既に存在していないか初期テストを行います。また、"
"複写が失敗した場合にコマンドが 0 でないステータスを返すことも重要です。"

#: ../../en/backup.rst:181
msgid ""
"Once the changes are made you can re-start PostgreSQL to make them effective."
msgstr "変更を行ったら、PostgreSQLを再起動して、設定を有効化させることができます。"

#: ../../en/backup.rst:185
msgid "Taking the Base Backup"
msgstr "基本バックアップの取得"

#: ../../en/backup.rst:187
msgid ""
"Once the archiving process is in place, you need to take a base back-up."
msgstr "アーカイブプロセスが用意できたら、基本バックアップを取る必要があります。"

#: ../../en/backup.rst:189
msgid ""
"Put the database into backup mode (this doesn't do anything to alter "
"operation of queries or data updates, it just forces a checkpoint and writes "
"a label file indicating when the backup was taken)."
msgstr ""
"データベースをバックアップモードにします (クエリやデータ更新の処理の変更に関"
"することは行わず、チェックポイントの強制とバックアップの取られた時を示すラベ"
"ルファイルを書くだけです)。"

#: ../../en/backup.rst:195
msgid ""
"For the label, using the path to the backup file is a good practice, as it "
"helps you track down where the backup was stored."
msgstr "ラベルの場合、バックファイルへのパスを使うのが良い方法です。バックアップが保"
"存されている場所を追跡するのに役立つからです。"

#: ../../en/backup.rst:197
msgid "Copy the database to an archival location:"
msgstr "データベースをアーカイブ位置に複写します:"

#: ../../en/backup.rst:204
msgid "Then tell the database the backup process is complete."
msgstr "次に、バックアップ処理を完了したことをデータベースに通知します。"

#: ../../en/backup.rst:210
msgid "All these steps can of course be scripted for regular base backups."
msgstr "これらの手順の全ては、もちろん、定期的な基本バックアップに使うスクリプトにす"
"ることができます。"

#: ../../en/backup.rst:214
msgid "Restoring from the Archive"
msgstr "アーカイブからのレストア"

#: ../../en/backup.rst:216
msgid ""
"These steps are taking from the PostgreSQL manual on `continuous archiving "
"and point-in-time recovery <http://www.postgresql.org/docs/current/static/"
"continuous-archiving.html>`_."
msgstr ""
"これらの手順は PostgreSQL マニュアル "
"`継続的アーカイブとポイントインタイムリカバリ（PITR） <https://www.postgresql"
".jp/document/current/html/continuous-archiving.html>`_ から取得しました。"

#: ../../en/backup.rst:218
msgid "Stop the server, if it's running."
msgstr "サーバが動いている場合には止めます。"

#: ../../en/backup.rst:219
msgid ""
"If you have the space to do so, copy the whole cluster data directory and "
"any tablespaces to a temporary location in case you need them later. Note "
"that this precaution will require that you have enough free space on your "
"system to hold two copies of your existing database. If you do not have "
"enough space, you should at least save the contents of the cluster's pg_xlog "
"subdirectory, as it might contain logs which were not archived before the "
"system went down."
msgstr ""
"そのためのスペースがある場合には、クラスタデータディレクトリ全体と全てのテー"
"ブルスペースとを、後に必要になる場合のために、一時的な場所に複写します。この"
"予防措置を行うには、既存のデータベースの二つの複写物を保持するだけの十分なフ"
"リースペースがシステム上に存在している必要があります。十分なスペースが無い場"
"合には、少なくともクラスタの pg_xlog サブディレクトリの内容を保存すべきです。"
"システムが落ちる前にアーカイブされなかったログを含んでいる可能性があるためで"
"す。"

#: ../../en/backup.rst:220
msgid ""
"Remove all existing files and subdirectories under the cluster data "
"directory and under the root directories of any tablespaces you are using."
msgstr "クラスタデータディレクトリ内とテーブルスペースのルートディレクトリ内の、全て"
"の存在するファイルとサブディレクトリを削除します。"

#: ../../en/backup.rst:221
msgid ""
"Restore the database files from your file system backup. Be sure that they "
"are restored with the right ownership (the database system user, not root!) "
"and with the right permissions. If you are using tablespaces, you should "
"verify that the symbolic links in pg_tblspc/ were correctly restored."
msgstr ""
"システムバックアップからデータベースをレストアします。正しい所有権 "
"(データベースシステムユーザであって、root ではダメです!) を持ち、正しいパーミ"
"ッションを持つようにして下さい。テーブルスペースを使用している場合には、"
"pg_tblspc/ 内のシンボリックリンクが正しくレストアされたか確認して下さい。"

#: ../../en/backup.rst:222
msgid ""
"Remove any files present in pg_xlog/; these came from the file system backup "
"and are therefore probably obsolete rather than current. If you didn't "
"archive pg_xlog/ at all, then recreate it with proper permissions, being "
"careful to ensure that you re-establish it as a symbolic link if you had it "
"set up that way before."
msgstr ""
"pg_xlog/ 内に存在するファイルを全て削除します。このファイルはファイルシステム"
"のバックアップから来たもので、今より前の者です。pg_xlog/ を全くアーカイブして"
"いなかった場合には、適切な権限で再生成します。以前にシンボリックリンクで作っ"
"ていた場合には、そのように再確立するように注意して下さい。"

#: ../../en/backup.rst:223
msgid ""
"If you have unarchived WAL segment files that you saved in step 2, copy them "
"into pg_xlog/. (It is best to copy them, not move them, so you still have "
"the unmodified files if a problem occurs and you have to start over.)"
msgstr ""
"手順 2 で保存したアーカイブしていない WAL "
"セグメントファイルがある場合にはそれらを pg_xlog/ の下に複写します。(複写が最"
"善です。移動はよくありません。問題が発生して、やり直しになった場合でも、変更"
"されていないファイルがまだ手元に残っているからです。)"

#: ../../en/backup.rst:224
msgid ""
"Create a recovery command file recovery.conf in the cluster data directory "
"(see Chapter 26). You might also want to temporarily modify pg_hba.conf to "
"prevent ordinary users from connecting until you are sure the recovery was "
"successful."
msgstr ""
"リカバリコマンドファイル recovery.conf をクラスタデータディレクトリ "
"(26章参照) 内に作ります。リカバリ成功が確認できるまで、一時的に pg_hba.conf "
"を編集して、一般ユーザからの接続を防いだ方がいいかも知れません。"

#: ../../en/backup.rst:225
msgid ""
"Start the server. The server will go into recovery mode and proceed to read "
"through the archived WAL files it needs. Should the recovery be terminated "
"because of an external error, the server can simply be restarted and it will "
"continue recovery. Upon completion of the recovery process, the server will "
"rename recovery.conf to recovery.done (to prevent accidentally re-entering "
"recovery mode later) and then commence normal database operations."
msgstr ""
"サーバを起動します。サーバはリカバリモードになり、必要なアーカイブ WAL ファイ"
"ルが読まれます。外部エラーのためにリカバリが終わらされると、サーバは単に再起"
"動され、リカバリが継続されます。リカバリ処理が完了すると、サーバは "
"recovery.conf というファイル名を recovery.done に変え (誤ってリカバリモードに"
"再び入るのを防ぐためです)、通常のデータベース操作を開始します。"

#: ../../en/backup.rst:226
msgid ""
"Inspect the contents of the database to ensure you have recovered to the "
"desired state. If not, return to step 1. If all is well, allow your users to "
"connect by restoring pg_hba.conf to normal."
msgstr ""
"求める状態へのリカバリに成功したことを確認するためにデータベースの内容を調査"
"します。もしうまくいっていなかったら、手順 1 に戻ります。うまくいったなら、"
"pg_hba.conf を通常に戻して、ユーザが接続できるようにします。"

#: ../../en/backup.rst:231
msgid "Links"
msgstr "リンク"

#: ../../en/backup.rst:233
msgid ""
"`pg_dump <http://www.postgresql.org/docs/current/static/app-pgdump.html>`_"
msgstr ""
"`pg_dump <https://www.postgresql.jp/document/current/html/app-pgdump.html>`_"

#: ../../en/backup.rst:234
msgid ""
"`pg_dumpall <http://www.postgresql.org/docs/current/static/app-pg-dumpall."
"html>`_"
msgstr ""
"`pg_dumpall <https://www.postgresql.jp/document/current/html/app-pg-dumpall."
"html>`_"

#: ../../en/backup.rst:235
msgid ""
"`pg_restore <http://www.postgresql.org/docs/current/static/app-pgrestore."
"html>`_"
msgstr ""
"`pg_restore <https://www.postgresql.jp/document/current/html/app-pgrestore."
"html>`_"

#: ../../en/backup.rst:236
msgid ""
"`PostgreSQL High Availability <http://www.postgresql.org/docs/current/static/"
"high-availability.html>`_"
msgstr ""
"`高可用性、負荷分散およびレプリケーション <https://www.postgresql.jp/"
"document/current/html/high-availability.html>`_"

#: ../../en/backup.rst:237
msgid ""
"`PostgreSQL High Availability Continuous Archiving and PITR <http://www."
"postgresql.org/docs/current/static/continuous-archiving.html>`_"
msgstr ""
"`継続的アーカイブとポイントインタイムリカバリ（PITR） <https://www.postgresql"
".jp/document/current/html/continuous-archiving.html>`_"
