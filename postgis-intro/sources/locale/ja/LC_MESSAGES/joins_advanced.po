# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012, Paul Ramsey | Mark Leslie
# This file is distributed under the same license as the Introduction to
# PostGIS package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
# Teramoto Ikuhiro <yellow@affrc.go.jp>, 2023, 2024.
msgid ""
msgstr ""
"Project-Id-Version: Introduction to PostGIS 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-07 21:46-0500\n"
"PO-Revision-Date: 2024-02-27 02:45+0000\n"
"Last-Translator: Teramoto Ikuhiro <yellow@affrc.go.jp>\n"
"Language-Team: Japanese <https://weblate.osgeo.org/projects/postgis-workshop/"
"joins_advanced/ja/>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.3\n"
"Generated-By: Babel 2.9.1\n"

#: ../../en/joins_advanced.rst:4
msgid "More Spatial Joins"
msgstr "その他の空間結合"

#: ../../en/joins_advanced.rst:6
msgid ""
"In the last section we saw the :command:`ST_Centroid(geometry)` and :command:"
"`ST_Union([geometry])` functions, and some simple examples. In this section "
"we will do some more elaborate things with them."
msgstr ""
"前のセクションで、:command:`ST_Centroid(geometry)` 関数と "
":command:`ST_Union([geometry])` "
"関数と、簡単な例を見ました。このセクションでは、より複雑なことを行います。"

#: ../../en/joins_advanced.rst:11 ../../en/joins_advanced.rst:31
msgid "Creating a Census Tracts Table"
msgstr "国勢統計区テーブルの作成"

#: ../../en/joins_advanced.rst:13
msgid ""
"In the workshop ``\\data\\`` directory, is a file that includes attribute "
"data, but no geometry, ``nyc_census_sociodata.sql``. The table includes "
"interesting socioeconomic data about New York: commute times, incomes, and "
"education attainment. There is just one problem. The data are summarized by "
"\"census tract\" and we have no census tract spatial data!"
msgstr ""
"ワークショップ内の ``\\data\\`` ディレクトリは、"
"属性データを含みますがジオメトリを持たないファイル ``nyc_census_sociodata."
"sql`` です。このテーブルはニューヨークの社会経済的なデータである通勤時間、収"
"入、学歴を持ちます。一つだけ問題があります。データは \"census tract\" "
"(国勢調査統計区) ごとに集約されていて国勢調査統計区の空間データはありません!"

#: ../../en/joins_advanced.rst:15
msgid "In this section we will"
msgstr "このセクションでは次のことを行います"

#: ../../en/joins_advanced.rst:17
msgid "Load the ``nyc_census_sociodata.sql`` table"
msgstr "``nyc_census_sociodata.sql`` テーブルのロード"

#: ../../en/joins_advanced.rst:18
msgid "Create a spatial table for census tracts"
msgstr "国勢統計区の空間テーブルの生成"

#: ../../en/joins_advanced.rst:19
msgid "Join the attribute data to the spatial data"
msgstr "空間データへの属性データの結合"

#: ../../en/joins_advanced.rst:20
msgid "Carry out some analysis using our new data"
msgstr "新しいデータを使った分析の実行"

#: ../../en/joins_advanced.rst:23
msgid "Loading nyc_census_sociodata.sql"
msgstr "nyc_census_sociodata.sql のロード"

#: ../../en/joins_advanced.rst:25
msgid "Open the SQL query window in PgAdmin"
msgstr "pgAdmin の SQLクエリ ウィンドウを開きます"

#: ../../en/joins_advanced.rst:26
msgid ""
"Select **File->Open** from the menu and browse to the ``nyc_census_sociodata."
"sql`` file"
msgstr "メニューから **File->Open** を選択し、``nyc_census_sociodata.sql`` "
"ファイルを指定します"

#: ../../en/joins_advanced.rst:27
msgid "Press the \"Run Query\" button"
msgstr "\"Run Query\" ボタンを押します"

#: ../../en/joins_advanced.rst:28
msgid ""
"If you press the \"Refresh\" button in PgAdmin, the list of tables should "
"now include at ``nyc_census_sociodata`` table"
msgstr ""
"pgAdmin の \"Refresh\"ボタン を押すと、テーブルの一覧に "
"``nyc_census_sociodata`` テーブルが入るようになります"

#: ../../en/joins_advanced.rst:33
msgid ""
"As we saw in the previous section, we can build up higher level geometries "
"from the census block by summarizing on substrings of the ``blkid`` key. In "
"order to get census tracts, we need to summarize grouping on the first 11 "
"characters of the ``blkid``."
msgstr ""
"前のセクションで見たように \"blkid\" キーの部分文字列で要約することで、国勢調"
"査細分区から、より高いレベルのジオメトリを構築することができます。国勢統計区"
"を取得するために、\"blkid\" "
"の最初の11文字によってグループ化を要約する必要があります。"

#: ../../en/joins_advanced.rst:46
msgid "Create the new table using the :command:`ST_Union` aggregate:"
msgstr ":command:`ST_Union` 集約関数を使った新テーブルの生成:"

#: ../../en/joins_advanced.rst:64
msgid "Join the Attributes to the Spatial Data"
msgstr "属性データの空間データへの結合"

#: ../../en/joins_advanced.rst:66
msgid ""
"Join the table of tract geometries to the table of tract attributes with a "
"standard attribute join"
msgstr "国勢調査統計区ジオメトリのテーブルを国勢調査統計区属性データのテーブルに、標"
"準属性結合を使って、結合します"

#: ../../en/joins_advanced.rst:87
msgid "Answer an Interesting Question"
msgstr "興味深い質問に答える"

#: ../../en/joins_advanced.rst:89
msgid ""
"Answer an interesting question! \"List top 10 New York neighborhoods ordered "
"by the proportion of people who have graduate degrees.\""
msgstr "興味深い質問に答えて下さい! "
"「大学院の学位を持つ人の数が多い地区の上位10件までのリストを作成して下さい」"

#: ../../en/joins_advanced.rst:104
msgid ""
"We sum up the statistics we are interested, then divide them together at the "
"end. In order to avoid divide-by-zero errors, we don't bother bringing in "
"tracts that have a population count of zero."
msgstr "欲しい統計データを合計して、最後にそれらを分割します。0 "
"で割らないようにするため、人口が 0 の統計区を取り込みません。"

#: ../../en/joins_advanced.rst:124
msgid ""
"New York geographers will be wondering at the presence of \"Flatbush\" in "
"this list of over-educated neighborhoods. The answer is discussed in the "
"next section."
msgstr "ニューヨークの地理学者は、この高学歴の地区のリストに「フラットブッシュ」があ"
"ることに疑問を抱きます。答については次のセクションで検討します。"

#: ../../en/joins_advanced.rst:129
msgid "Polygon/Polygon Joins"
msgstr "ポリゴン/ポリゴン結合"

#: ../../en/joins_advanced.rst:131
msgid ""
"In our interesting query (in :ref:`interestingquestion`) we used the :"
"command:`ST_Intersects(geometry_a, geometry_b)` function to determine which "
"census tract polygons to include in each neighborhood summary. Which leads "
"to the question: what if a tract falls on the border between two "
"neighborhoods? It will intersect both, and so will be included in the "
"summary statistics for **both**."
msgstr ""
"興味深いクエリ (:ref:`interestingquestion` 内) の中で、"
"地区ごとの集約をどの国勢調査統計区ポリゴンに含ませるかを決めるために "
":command:`ST_Intersects(geometry_a, geometry_b)` "
"関数を使いました。次の質問に繋がります: "
"地区が二つの町の境界線上にある場合にはどうなりますか? "
"両方にインタセクトするため、**両方**の統計値に含んでしまいます。"

#: ../../en/joins_advanced.rst:135
msgid "To avoid this kind of double counting there are two methods:"
msgstr "この種の二重カウントを避けるには二つの方法があります:"

#: ../../en/joins_advanced.rst:137
msgid ""
"The simple method is to ensure that each tract only falls in **one** summary "
"area (using :command:`ST_Centroid(geometry)`)"
msgstr ""
"単純な方法として、それぞれの統計区を**一つの**"
"集約領域だけに収まるようにします (:command:`ST_Centroid(geometry)` "
"を使います)"

#: ../../en/joins_advanced.rst:138
msgid ""
"The complex method is to divide crossing tracts at the borders (using :"
"command:`ST_Intersection(geometry,geometry)`)"
msgstr ""
"複雑な方法として、境界でクロスする統計区を分割します "
"(:command:`ST_Intersection(geometry,geometry)` を使います)"

#: ../../en/joins_advanced.rst:140
msgid ""
"Here is an example of using the simple method to avoid double counting in "
"our graduate education query:"
msgstr "大学院教育のクエリで二重カウントを回避する単純な手法を使う例を示します:"

#: ../../en/joins_advanced.rst:155
msgid ""
"Note that the query takes longer to run now, because the :command:"
"`ST_Centroid` function  has to be run on every census tract."
msgstr ""
"このクエリは時間がかかります。というのも、:command:`ST_Centroid` "
"関数を全ての統計区について実行しなければならないからです。"

#: ../../en/joins_advanced.rst:172
msgid "Avoiding double counting changes the results!"
msgstr "二重カウントを回避すると結果が変わります!"

#: ../../en/joins_advanced.rst:175
msgid "What about Flatbush?"
msgstr "Flatbush はどうでしょう?"

#: ../../en/joins_advanced.rst:177
msgid ""
"In particular, the Flatbush neighborhood has dropped off the list. The "
"reason why can be seen by looking more closely at the map of the Flatbush "
"neighborhood in our table."
msgstr "特にフラットブッシュ地区はリストから外れました。テーブル内のフラットブッシュ"
"地区の地図を詳しく見ると理由が分かります。"

#: ../../en/joins_advanced.rst:181
msgid ""
"As defined by our data source, Flatbush is not really a neighborhood in the "
"conventional sense, since it just covers the area of Prospect Park. The "
"census tract for that area records, naturally, zero residents. However, the "
"neighborhood boundary does scrape one of the expensive census tracts "
"bordering the north side of the park (in the gentrified Park Slope "
"neighborhood). When using polygon/polygon tests, this single tract was added "
"to the otherwise empty Flatbush, resulting in the very high score for that "
"query."
msgstr ""
"データソースで定義されている通り、プロスペクト公園だけしかないので、従来の意"
"味ではフラットブッシュは本当の地区とは言えません。この領域における国勢調査統"
"計区は、当然のことですが、住民は 0 です。しかし、"
"地区境界は公園の北側に隣接する高級な国勢調査統計区の一つ "
"(高級になったパークスロープ) を削ります。ポリゴン/ポリゴンテストを使用すると"
"、この一つの統計区が空っぽのフラットブッシュに追加され、非常に高いスコアにな"
"りました。"

#: ../../en/joins_advanced.rst:186
msgid "Large Radius Distance Joins"
msgstr "大きな半径距離の結合"

#: ../../en/joins_advanced.rst:188
msgid ""
"A query that is fun to ask is \"How do the commute times of people near "
"(within 500 meters) subway stations differ from those of people far away "
"from subway stations?\""
msgstr "「地下鉄駅近く (500m以内) "
"の人と、そうでない人との通勤時間がどれぐらい違うか?」と聞いてみたいですね。"

#: ../../en/joins_advanced.rst:190
msgid ""
"However, the question runs into some problems of double counting: many "
"people will be within 500 meters of multiple subway stations. Compare the "
"population of New York:"
msgstr ""
"しかしながら、この質問は、複数の地下鉄駅の 500m 圏内に入る人が多数出るという"
"、二重カウントの問題に行き当たります。ニューヨークの人口を比較します:"

#: ../../en/joins_advanced.rst:201
msgid ""
"With the population of the people in New York within 500 meters of a subway "
"station:"
msgstr "ニューヨーク市内の、地下鉄駅から 500m 圏内にいる人の人口は、次の通りです:"

#: ../../en/joins_advanced.rst:214
msgid ""
"There's more people close to the subway than there are people! Clearly, our "
"simple SQL is making a big double-counting error. You can see the problem "
"looking at the picture of the buffered subways."
msgstr ""
"地下鉄に近い人の人口が、全体の人口を超えてしまっています! 明らかに、"
"この単純な SQL では、大きな二重カウントのエラーを犯しています。バッファリング"
"された地下鉄の図を見ると、問題点が分かってきます。"

#: ../../en/joins_advanced.rst:218
msgid ""
"The solution is to ensure that we have only distinct census blocks before "
"passing them into the summarization portion of the query. We can do that by "
"breaking our query up into a subquery that finds the distinct blocks, "
"wrapped in a summarization query that returns our answer:"
msgstr ""
"クエリの集約部分に渡す前に、重複しない統計調査細分区だけを持つようにすること"
"で解決できます。クエリを、重複しない細分区を探すサブクエリと、答を返す集約ク"
"エリにくるまれたサブクエリとに分割することで、実現できます:"

#: ../../en/joins_advanced.rst:235
msgid ""
"That's better! So a bit over half the population of New York is within 500m "
"(about a 5-7 minute walk) of the subway."
msgstr "この方がいいです! 地下鉄駅から 500m 圏内 (徒歩約 5-7 分) "
"の人口はニューヨーク市の半分です。"
