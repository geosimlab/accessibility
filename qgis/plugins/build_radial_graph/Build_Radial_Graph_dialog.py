# -*- coding: utf-8 -*-
"""
/***************************************************************************
 GraphOfRadialCityDialog
                                 A QGIS plugin
 This plugin builds a graph of radial city for experimints for road networks.
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2023-04-23
        git sha              : $Format:%H$
        copyright            : (C) 2023 by Rasin Oleg
        email                : RasinOV25@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets

from .RadialCity2ver import GraphRadialCity

FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'Build_Radial_Graph_dialog_base.ui'))

class GraphOfRadialCityDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(GraphOfRadialCityDialog, self).__init__(parent)
        self.setupUi(self)
        self.Btn_sel_dir.clicked.connect(self.getDirectory)
        self.button_box.accepted.connect(self.buildCity)

    def getDirectory(self):
        self.Path = QtWidgets.QFileDialog.getExistingDirectory(self, "Select Directory")
        self.lEdt_Path.setText(self.Path)

    def buildCity(self):
        s = GraphRadialCity(int(self.lEdt_numb.text()), int(self.lEdt_dist.text()))
        s.run()
        self.close()
